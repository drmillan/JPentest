import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import jpen.PLevel;
import jpen.PLevelEvent;
import jpen.PenManager;
import jpen.PenProvider;
import jpen.demo.JPenDemoControl;
import jpen.demo.inspect.Inspector;
import jpen.event.PenAdapter;
import jpen.owner.multiAwt.AwtPenToolkit;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;

public class TestJPen {
    private static final ObjectMapper MAPPER=new ObjectMapper();
    public static final void main(String[] args) throws IOException {
        PenManager penManager = AwtPenToolkit.getPenManager();
        penManager.pen.setFirePenTockOnSwing(true);
        penManager.pen.setFrequencyLater(40);
        penManager.pen.levelEmulator.setPressureTriggerForLeftCursorButton(0.5F);

        try {
            JFrame jFrame=new JFrame();
            jFrame.setVisible(true);
            JPanel panel=new JPanel();
            panel.setBackground(Color.RED);
            jFrame.getContentPane().add(panel);
            AwtPenToolkit.addPenListener(panel, new PenAdapter() {
                @Override
                public void penLevelEvent(PLevelEvent ev) {
                    try {
                        System.out.println(MAPPER.writeValueAsString(ev.levels));
                        for(PLevel level:ev.levels){
                            System.out.println(level.getType()+":"+level.value);
                        }
                    } catch (JsonProcessingException e) {
                        e.printStackTrace();
                    }
                    super.penLevelEvent(ev);
                }
            });
            jFrame.setBounds(10,10,1000,1000);
            jFrame.setVisible(true);
        }catch(Exception ex){
ex.printStackTrace();
        }
    }
}
